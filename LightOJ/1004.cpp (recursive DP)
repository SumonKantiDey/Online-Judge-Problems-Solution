////http://www.shafaetsplanet.com/planetcoding/?p=1158
///http://lightoj.com/volume_showproblem.php?problem=1004
#include<bits/stdc++.h>
using namespace std;
#define INF 1000000009
int r,c;
int dp[205][205];
int store[205][205];

int call(int i, int j)
{
    if(i >=0 && i < (2*r - 1) && j >= 0 && j < r)
    {
        if(dp[i][j] != -1) return dp[i][j];
        int ret = -INF;
        ret = max(ret,call(i+1,j) + store[i][j]);
        if (i >= r - 1)ret = max(ret,call(i + 1,j - 1) + store[i][j]);
        else ret = max(ret,call(i + 1,j + 1)+ store[i][j]);
        return dp[i][j] = ret;
        return dp[i][j];
    }
    else return 0;
}
int main()
{
    int t,cs = 0;
     scanf("%d",&t);
    while(t--)
    {
        memset(dp,-1,sizeof(dp));
        memset(store,0,sizeof(store));
        scanf("%d",&r);
        for(int i = 0; i<r; i++)
        {
            for(int j = 0; j<=i; j++)
            {
                //cout << i << " << " << j <<endl;
                scanf("%d",&store[i][j]);
            }
        }
        int k = r - 1;

        for(int i = r; i < (2*r - 1); i++)
        {
            for(int j = 0; j<k; j++)
            {
                 //cout << i << " << >>>>>" << j <<endl;
                scanf("%d",&store[i][j]);
            }
            k--;
        }
        int res = call(0,0);
       printf("Case %d: %d\n",++cs,res);
        }
      return 0;
}




