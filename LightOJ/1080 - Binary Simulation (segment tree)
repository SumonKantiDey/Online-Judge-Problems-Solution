#include<bits/stdc++.h>
using namespace std;
#define MAX 100005
#define hell 1e7
char str[MAX];
int tree[MAX*4]={0};
void update(int node,int st,int en,int i,int j){
     if(i > en || j < st) return;
     if(st >= i && j>= en)
     {
         tree[node]++;
         return;
     }
     int left = node * 2;
     int right = node * 2 + 1;
     int mid = (st + en )/2;
     update(left,st,mid,i,j);
     update(right,mid+1,en,i,j);
}

void query(int node,int st,int en,int pos)
{
    if(pos < st || en < pos) return;
    if(tree[node] != 0)
    {
        if(st != en)
        {
            tree[node * 2] += tree[node];
            tree[node*2 + 1] += tree[node];
            tree[node] = 0;
        }
    }
    if(st == en)
    {
        if(tree[node] % 2 == 1)
        {
            if(str[st] == '1') str[st] = '0';
            else  str[st] = '1';
        }
        tree[node] = 0;
        return;

    }
    int left = 2 * node;
    int right = 2 * node + 1;
    int mid = (st + en) /2;
    query(left,st,mid,pos);
    query(right,mid+1,en,pos);

}

int main()
{
    int t;
    scanf("%d",&t);
    for(int cs = 1; cs <= t; cs++)
    {
        int q,len;
        memset(tree,0,sizeof(tree));
        scanf("%s",str);
        len = strlen(str);
        scanf("%d",&q);
        printf("Case %d:\n",cs);
        while(q--){
            char c;
            int n1,n2;
            scanf(" %c",&c);
            if(c == 'I'){
                scanf("%d%d",&n1,&n2);
                update(1,0,len-1,n1-1,n2-1);
                //for(int i = 0; i <= 20; i++) cout << tree[i] << " ";
            }
            if(c == 'Q'){
                int pos;
                scanf("%d",&pos);
                query(1,0,len-1,pos-1);
                printf("%c\n",str[pos-1]);
            }
        }

    }

  return 0;
}
